<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cry.qa.dao.AnswerDao">
    <resultMap id="BaseResultMap" type="com.cry.qa.domain.Answer">
        <id column="Id" property="id" jdbcType="VARCHAR"/>
        <result column="Content" property="content" jdbcType="VARCHAR"/>
        <result column="SupportCnt" property="supportCnt" jdbcType="INTEGER"/>
        <result column="OpposeCnt" property="opposeCnt" jdbcType="INTEGER"/>
        <result column="AnswerTo" property="answerTo" jdbcType="VARCHAR"/>
        <result column="time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="UserId" property="userId" jdbcType="VARCHAR"/>
        <result column="accept" property="accept" jdbcType="INTEGER"/>
        <result column="praise" property="praise" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        Id
        , Content, SupportCnt, OpposeCnt, AnswerTo, time, UserId, accept, praise
    </sql>


    <resultMap type="com.cry.qa.response.AnswerViewModel" id="answerVmMapper">
        <id column="Id" property="id" jdbcType="VARCHAR"/>
        <result column="Content" property="content" jdbcType="VARCHAR"/>
        <result column="SupportCnt" property="supportCnt" jdbcType="INTEGER"/>
        <result column="OpposeCnt" property="opposeCnt" jdbcType="INTEGER"/>
        <result column="AnswerTo" property="answerTo" jdbcType="VARCHAR"/>
        <result column="time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="UserId" property="userId" jdbcType="VARCHAR"/>
        <result column="accept" property="accept" jdbcType="INTEGER"/>
        <result column="praise" property="praise" jdbcType="INTEGER"/>
        <association property="user" column="UserId" javaType="com.cry.qa.response.UserViewModel">
            <id column="UserId" property="id" jdbcType="VARCHAR"/>
            <result column="name" property="name" jdbcType="VARCHAR"/>
            <result column="rmb" property="rmb" jdbcType="INTEGER"/>
            <result column="pic" property="pic" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <select id="queryAnswersOfQuestion" resultMap="answerVmMapper">
        select a.*, u.*
        from answer a
                 left join user u
                           on u.id = a.UserId
        where a.AnswerTo = #{answerTo}
        order by a.time
    </select>

</mapper>